---
title: "Monarch Decoy Analysis"
author: "Kyle Nessen"
format:
    html:
        code-fold: true
        toc: true
        toc-depth: 3
        theme: cosmo
execute:
    echo: true
    warning: false
    message: false
date: last-modified
---
## Establish ROI Labels

```{r}
roi_labels <- c(
    "30101" = "PETG Basic Black",
    "30100" = "PETG Basic White",
    "30300" = "PETG Basic Orange",
    "30401" = "PETG Basic Gold",
    "10101" = "PLA Basic Black",
    "10100" = "PLA Basic White",
    "10300" = "PLA Basic Orange",
    "10401" = "PLA Basic Gold",
    "12101" = "PLA Tough Black",
    "12100" = "PLA Tough White",
    "12300" = "PLA Tough Orange",
    "11101" = "PLA Matte Black",
    "11100" = "PLA Matte White",
    "11300" = "PLA Matte Orange",
    "40101" = "ABS Black",
    "40100" = "ABS White",
    "40300" = "ABS Orange",
    "40402" = "ABS Gold",
    "orange" = "Monarch Orange",
    "white" = "Monarch White",
    "black" = "Monarch Black",
    "gold" = "Monarch Gold"
)
```

## Load data

```{r}
library(tidyverse)
library(here)

# List all CSV files in the data directory
csv_files <- list.files(path = here("data"), pattern = "*.csv", full.names = TRUE)

# Read and combine all CSV files, then clean and transform
df <- csv_files %>%
    # Read each CSV file and combine into one dataframe
    map_df(~ read_csv(., col_types = cols(.default = "c"))) %>%
    # Attempt to convert columns to appropriate types (e.g., numeric, factor)
    type.convert(as.is = TRUE) %>%
    # Correct specific ROI label misentries
    mutate(ROI_Label = str_replace_all(ROI_Label, "\\\\gold", "gold")) %>%
    mutate(ROI_Label = str_replace_all(ROI_Label, "\\\\white", "white")) %>%
    # Apply the defined ROI labels using the roi_labels named vector
    mutate(ROI_Label = recode(ROI_Label, !!!roi_labels)) %>%
    # Ensure the 'Channel' column is correctly set to "UV" for UV images
    mutate(Channel = if_else(Image_Source == "UV", "UV", Channel)) %>%
    # Rename specific channel values for clarity
    mutate(Channel = recode(Channel,
        "B" = "Blue",
        "G" = "Green",
        "UV" = "Ultraviolet"
    )) %>%
    # Create a 'category' column distinguishing "Monarch" from "Filament" based on ROI label
    mutate(category = if_else(str_detect(ROI_Label, "Monarch"), "Monarch", "Filament")) %>%
    # Remove the original 'Image_Source' column as it's no longer needed
    select(-Image_Source) %>%
    # Convert all column names to lowercase for consistency
    rename_with(tolower) %>%
    # Rename 'roi_label' to 'roi' for brevity
    rename(roi = roi_label) %>%
    # Extract the last word from the 'roi' column to create the 'color' column
    mutate(color = word(roi, -1))
```

## Histograms by color

```{r}
# Get unique colors
unique_colors <- unique(df$color)

# Loop through each color and create a plot
for (col in unique_colors) {
    # Filter data for the current color
    color_df <- df %>% filter(color == col)

    # Create the plot
    p <- ggplot(color_df, aes(x = value)) +
        geom_histogram(bins = 30) + # Adjust bins as needed
        facet_grid(channel ~ roi, scales = "free_y") + # Facet by channel (rows) and roi (columns)
        labs(
            title = paste("Histogram of Values for", col, "ROIs by Channel"),
            x = "Value",
            y = "Frequency"
        ) +
        theme_minimal() # Use a minimal theme

    # Print the plot
    print(p)
}
```
